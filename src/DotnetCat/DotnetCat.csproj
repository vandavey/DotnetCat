<Project Sdk="Microsoft.NET.Sdk">
    <!--
     DotnetCat project properties.
    -->
    <PropertyGroup>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <ApplicationIcon>Resources/Icon.ico</ApplicationIcon>
        <AssemblyName>dncat</AssemblyName>
        <Authors>vandavey</Authors>
        <Configurations>Debug; Release; Linux; ARM64</Configurations>
        <Copyright>Copyright (c) 2024 vandavey</Copyright>
        <DebugSymbols>false</DebugSymbols>
        <DebugType>None</DebugType>
        <Description>DotnetCat</Description>
        <ErrorReport>None</ErrorReport>
        <GenerateDocumentationFile>false</GenerateDocumentationFile>
        <ImplicitUsings>Disable</ImplicitUsings>
        <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
        <IntermediateOutputPath>obj/$(Configuration)</IntermediateOutputPath>
        <IsPackable>false</IsPackable>
        <Nullable>Enable</Nullable>
        <Optimize>true</Optimize>
        <OutputPath>bin/$(Configuration)</OutputPath>
        <OutputType>Exe</OutputType>
        <PackageLicenseFile>$(SolutionDir)../LICENSE.md</PackageLicenseFile>
        <PlatformTarget>AnyCPU</PlatformTarget>
        <Platforms>AnyCPU</Platforms>
        <PublishReadyToRun>true</PublishReadyToRun>
        <PublishRelease>true</PublishRelease>
        <PublishSelfContained>true</PublishSelfContained>
        <PublishSingleFile>true</PublishSingleFile>
        <PublishTrimmed>true</PublishTrimmed>
        <RepositoryUrl>https://github.com/vandavey/DotnetCat</RepositoryUrl>
        <RootNamespace>DotnetCat</RootNamespace>
        <SelfContained>true</SelfContained>
        <StartupObject>DotnetCat.Program</StartupObject>
        <TargetFramework>net9.0</TargetFramework>
        <WarningLevel>7</WarningLevel>
    </PropertyGroup>

    <!--
     Debug configuration properties.
    -->
    <PropertyGroup Condition="'$(Configuration)'=='Debug'">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>Portable</DebugType>
        <IncludeNativeLibrariesForSelfExtract>false</IncludeNativeLibrariesForSelfExtract>
        <Optimize>false</Optimize>
    </PropertyGroup>

    <!--
     Helper and utility properties.
    -->
    <PropertyGroup>
        <IsLinuxConfig Condition="'$(Configuration)'=='ARM64' OR '$(Configuration)'=='Linux'">true</IsLinuxConfig>
        <IsLinuxRid Condition="$(RuntimeIdentifier.StartsWith('linux-'))">true</IsLinuxRid>
        <IsWindowsConfig Condition="'$(Configuration)'=='Debug' OR '$(Configuration)'=='Release'">true</IsWindowsConfig>
        <IsWindowsRid Condition="$(RuntimeIdentifier.StartsWith('win-'))">true</IsWindowsRid>
        <Publishing Condition="'$(PublishProtocol)'!=''">true</Publishing>
    </PropertyGroup>

    <!--
     Compiler constants.
    -->
    <PropertyGroup>
        <DefineConstants Condition="'$(IsLinuxConfig)'=='true'">LINUX</DefineConstants>
        <DefineConstants Condition="'$(IsWindowsConfig)'=='true'">WINDOWS</DefineConstants>
    </PropertyGroup>

    <!--
     Make internals visible to unit tests project.
    -->
    <ItemGroup>
        <InternalsVisibleTo Include="DotnetCatTests" />
    </ItemGroup>

    <!--
     Include resource and property directories.
    -->
    <ItemGroup>
        <Folder Include="Properties/" />
        <Folder Include="Resources/" />
    </ItemGroup>

    <!--
     Include Markdown files and shell scripts.
    -->
    <ItemGroup>
        <None Include="$(SolutionDir)../*.md" Visible="false" />
        <None Include="$(SolutionDir)../tools/**/*.ps1" Visible="false" />
        <None Include="$(SolutionDir)../tools/**/*.sh" Visible="false" />
    </ItemGroup>

    <!--
     Copy utility files to output directory.
    -->
    <ItemGroup Condition="'$(Publishing)'=='true'">
        <!-- Copy license file. -->
        <ContentWithTargetPath Include="$(SolutionDir)../*.md">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
            <TargetPath>%(Filename)%(Extension)</TargetPath>
        </ContentWithTargetPath>

        <!-- Copy Linux scripts. -->
        <ContentWithTargetPath Include="$(SolutionDir)../tools/**/*.sh" Condition="'$(IsLinuxRid)'=='true'">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
            <TargetPath>%(Filename)%(Extension)</TargetPath>
        </ContentWithTargetPath>

        <!-- Copy Windows scripts. -->
        <ContentWithTargetPath Include="$(SolutionDir)../tools/**/*.ps1" Condition="'$(IsWindowsRid)'=='true'">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
            <TargetPath>%(Filename)%(Extension)</TargetPath>
        </ContentWithTargetPath>
    </ItemGroup>

    <!--
     Cleanup previous publish output files before republishing.
    -->
    <Target Name="CleanPublishOutput" BeforeTargets="BeforeBuild" Condition="'$(Publishing)'=='true'">
        <Message Importance="high" Text="Executing 'CleanPublishOutput':" />
        <CallTarget Targets="Clean" />
        <Delete Files="$(ProjectDir)bin/Zips/DotnetCat_$(RuntimeIdentifier).zip" />
        <RemoveDir Directories="$(ProjectDir)bin/Release/Publish/$(RuntimeIdentifier)" />
    </Target>

    <!--
     Create zip file containing published application files.
    -->
    <Target Name="CreateZip" AfterTargets="Publish" Condition="'$(Publishing)'=='true'">
        <Message Importance="high" Text="Executing 'CreateZip':" />
        <ZipDirectory Overwrite="true"
                      SourceDirectory="$(PublishDir)"
                      DestinationFile="$(ProjectDir)bin/Zips/DotnetCat_$(RuntimeIdentifier).zip" />
    </Target>
</Project>
